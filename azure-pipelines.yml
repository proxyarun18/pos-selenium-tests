trigger: none

resources:
  pipelines:
    - pipeline: testleaf
      source: proxyarun18.Testleaf-pos
      trigger:
        branches:
          include:
            - dev

variables:
  sonarProjectKey: 'SonarQubeArun'
  sonarProjectName: 'SonarQubeArun'
  sonarHostUrl: 'http://98.70.57.201:9000'
  sonarToken: 'sqp_0a4b770d57dda6e9259c353925571263a6a155c1'

stages:
  - stage: SonarScan
    displayName: "Stage 1: SonarQube Scan"
    jobs:
      - job: RunSonar
        displayName: "Run SonarQube Scanner"
        pool:
          vmImage: ubuntu-latest
        steps:
          - checkout: self
          - script: |
              echo "=== Running SonarQube Scan ==="
              mvn clean verify sonar:sonar \
                -Dsonar.projectKey=$(sonarProjectKey) \
                -Dsonar.projectName='$(sonarProjectName)' \
                -Dsonar.host.url=$(sonarHostUrl) \
                -Dsonar.token=$(sonarToken) \
                -Dsonar.skipTests=true
            displayName: "Run Maven SonarQube Scan"

  - stage: RunTests
    displayName: "Stage 2: Maven Tests"
    dependsOn: SonarScan
    condition: always()   # Run regardless of SonarScan result
    jobs:
      - job: MavenTests
        displayName: "Run Maven Tests"
        pool:
          vmImage: ubuntu-latest
        steps:
          - checkout: self
          - task: Maven@3
            displayName: 'Run Maven Test'
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.8'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              goals: 'clean test'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish ExtentReports'
            inputs:
              pathtoPublish: '$(Build.SourcesDirectory)/reports'
              artifactName: 'ExtentReports'
